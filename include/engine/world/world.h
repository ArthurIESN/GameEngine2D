#ifndef WORLD_H
#define WORLD_H

#include <stdbool.h>
#include <structs/structs.h>
#include <engine/components/dynamicArray.h>

extern const int WORLD_OBJECTS_DYNAMIC_ARRAY_CHUNK_SIZE;

typedef struct
{
    Object* object;
    Vector2 objectWorldPosition;
} WorldStaticObject; 

typedef struct
{
    DynamicObject* dynamicObject;
    Vector2 dynamicObjectWorldPosition;
} WorldDynamicObject;

typedef struct
{
    WorldStaticObject* staticObjects;
    int staticObjectsCount;
    WorldDynamicObject* dynamicObjects;
    int dynamicObjectsCount;
} WorldObjects;

typedef struct
{
    WorldObjects WorldObjects;
    Vector2 gravity;
    Vector2 worldSize;
    bool isAutoGenerated;
} World;

World* World_init();

// Object memory management
void World_AddStaticObject(World* world, Object* object);
void World_RemoveStaticObject(World* world, int index);
void World_ShiftLeftStaticObject(WorldStaticObject* objects, int indexStartShift, int arrayCount);

// Dynamic object memory management
void World_AddDynamicObject(World* world, DynamicObject* object);
void World_RemoveDynamicObject(World* world, int index);
void World_ShiftLeftDynamicObject(WorldDynamicObject* objects, int indexStartShift, int arrayCount);

#endif // WORLD_H